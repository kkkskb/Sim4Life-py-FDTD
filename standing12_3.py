# -*- coding: utf-8 -*-
# This script was auto-generated by Sim4Life version 7.2.4.14019


import numpy
import s4l_v1.document as document
import s4l_v1.materials.database as database
import s4l_v1.model as model
import s4l_v1.simulation.emfdtd as emfdtd
import s4l_v1.units as units
from s4l_v1 import ReleaseVersion
from s4l_v1 import Unit

try:
    # Define the version to use for default values
    ReleaseVersion.set_active(ReleaseVersion.version7_2)
    
    # Creating the simulation
    simulation = emfdtd.Simulation()
    simulation.Name = "EM_-X5"

    # Mapping the components and entities
    component__plane_x = simulation.AllComponents["Plane X+"]
    component__plane_x_1 = simulation.AllComponents["Plane X-"]
    component__background = simulation.AllComponents["Background"]
    component__plane_y = simulation.AllComponents["Plane Y+"]
    component__plane_y_1 = simulation.AllComponents["Plane Y-"]
    component__plane_z = simulation.AllComponents["Plane Z+"]
    component__plane_z_1 = simulation.AllComponents["Plane Z-"]
    component__overall_field = simulation.AllComponents["Overall Field"]
    entity__tissue_7 = model.AllEntities()["Tissue_7"]
    entity__tissue_1 = model.AllEntities()["Tissue_1"]
    entity__tissue_45 = model.AllEntities()["Tissue_45"]
    entity__tissue_12 = model.AllEntities()["Tissue_12"]
    entity__tissue_23 = model.AllEntities()["Tissue_23"]
    entity__tissue_25 = model.AllEntities()["Tissue_25"]
    entity__tissue_20 = model.AllEntities()["Tissue_20"]
    entity__tissue_26 = model.AllEntities()["Tissue_26"]
    entity__tissue_8 = model.AllEntities()["Tissue_8"]
    entity__tissue_49 = model.AllEntities()["Tissue_49"]
    entity__tissue_24 = model.AllEntities()["Tissue_24"]
    entity__tissue_18 = model.AllEntities()["Tissue_18"]
    entity__tissue_0 = model.AllEntities()["Tissue_0"]
    entity__tissue_35 = model.AllEntities()["Tissue_35"]
    entity__tissue_19 = model.AllEntities()["Tissue_19"]
    entity__tissue_39 = model.AllEntities()["Tissue_39"]
    entity__tissue_50 = model.AllEntities()["Tissue_50"]
    entity__tissue_52 = model.AllEntities()["Tissue_52"]
    entity__tissue_44 = model.AllEntities()["Tissue_44"]
    entity__tissue_54 = model.AllEntities()["Tissue_54"]
    entity__tissue_13 = model.AllEntities()["Tissue_13"]
    entity__tissue_22 = model.AllEntities()["Tissue_22"]
    entity__tissue_4 = model.AllEntities()["Tissue_4"]
    entity__tissue_30 = model.AllEntities()["Tissue_30"]
    entity__tissue_46 = model.AllEntities()["Tissue_46"]
    entity__tissue_29 = model.AllEntities()["Tissue_29"]
    entity__wire_block1 = model.AllEntities()["Wire Block 1"]
    entity__tissue_31 = model.AllEntities()["Tissue_31"]
    entity__tissue_48 = model.AllEntities()["Tissue_48"]
    entity__tissue_9 = model.AllEntities()["Tissue_9"]
    entity__tissue_10 = model.AllEntities()["Tissue_10"]
    entity__tissue_15 = model.AllEntities()["Tissue_15"]
    entity__tissue_14 = model.AllEntities()["Tissue_14"]
    entity__tissue_33 = model.AllEntities()["Tissue_33"]
    entity__tissue_17 = model.AllEntities()["Tissue_17"]
    entity__tissue_32 = model.AllEntities()["Tissue_32"]
    entity__tissue_43 = model.AllEntities()["Tissue_43"]
    entity__tissue_28 = model.AllEntities()["Tissue_28"]
    entity__tissue_51 = model.AllEntities()["Tissue_51"]
    entity__tissue_53 = model.AllEntities()["Tissue_53"]
    entity__tissue_34 = model.AllEntities()["Tissue_34"]
    entity__tissue_6 = model.AllEntities()["Tissue_6"]
    entity__tissue_42 = model.AllEntities()["Tissue_42"]
    entity__tissue_37 = model.AllEntities()["Tissue_37"]
    entity__tissue_38 = model.AllEntities()["Tissue_38"]
    entity__tissue_5 = model.AllEntities()["Tissue_5"]
    entity__tissue_56 = model.AllEntities()["Tissue_56"]
    entity__tissue_11 = model.AllEntities()["Tissue_11"]
    entity__tissue_2 = model.AllEntities()["Tissue_2"]
    entity__tissue_55 = model.AllEntities()["Tissue_55"]
    entity__tissue_47 = model.AllEntities()["Tissue_47"]
    entity__tissue_21 = model.AllEntities()["Tissue_21"]

    # Editing SetupSettings "Setup
    setup_settings = simulation.SetupSettings
    setup_settings.GlobalAutoTermination = setup_settings.GlobalAutoTermination.enum.GlobalAutoTerminationStrict
    setup_settings.SimulationTime = 30.0, units.Periods

    # Adding a new MaterialSettings
    material_settings = emfdtd.MaterialSettings()
    components = [entity__tissue_50]
    mat = database["IT'IS 4.1"]["Fat"]
    if mat is not None:
        simulation.LinkMaterialWithDatabase(material_settings, mat)
    else:
        # Fallback if material is not found
        material_settings.Name = "Fat"
        material_settings.MassDensity = 911.0, Unit("kg/m^3")
        material_settings.ElectricProps.Conductivity = 0.11638198214029223, Unit("S/m")
        material_settings.ElectricProps.RelativePermittivity = 11.29425354244377
    simulation.Add(material_settings, components)

    # Adding a new MaterialSettings
    material_settings = emfdtd.MaterialSettings()
    components = [entity__tissue_47]
    mat = database["IT'IS 4.1"]["Skin"]
    if mat is not None:
        simulation.LinkMaterialWithDatabase(material_settings, mat)
    else:
        # Fallback if material is not found
        material_settings.Name = "Skin"
        material_settings.MassDensity = 1109.0, Unit("kg/m^3")
        material_settings.ElectricProps.Conductivity = 0.8997924135002646, Unit("S/m")
        material_settings.ElectricProps.RelativePermittivity = 40.936135452253346
    simulation.Add(material_settings, components)

    # Adding a new MaterialSettings
    material_settings = emfdtd.MaterialSettings()
    components = [entity__tissue_0, entity__tissue_1, entity__tissue_10, entity__tissue_11, entity__tissue_12, entity__tissue_13, entity__tissue_14, entity__tissue_15, entity__tissue_17, entity__tissue_18, entity__tissue_19, entity__tissue_2, entity__tissue_20, entity__tissue_21, entity__tissue_22, entity__tissue_23, entity__tissue_24, entity__tissue_25, entity__tissue_26, entity__tissue_28, entity__tissue_29, entity__tissue_30, entity__tissue_31, entity__tissue_32, entity__tissue_33, entity__tissue_34, entity__tissue_35, entity__tissue_37, entity__tissue_38, entity__tissue_39, entity__tissue_4, entity__tissue_42, entity__tissue_43, entity__tissue_44, entity__tissue_45, entity__tissue_46, entity__tissue_48, entity__tissue_49, entity__tissue_5, entity__tissue_51, entity__tissue_52, entity__tissue_53, entity__tissue_54, entity__tissue_55, entity__tissue_56, entity__tissue_6, entity__tissue_7, entity__tissue_8, entity__tissue_9]
    mat = database["IT'IS 4.1"]["Muscle"]
    if mat is not None:
        simulation.LinkMaterialWithDatabase(material_settings, mat)
    else:
        # Fallback if material is not found
        material_settings.Name = "Muscle"
        material_settings.MassDensity = 1090.4, Unit("kg/m^3")
        material_settings.ElectricProps.Conductivity = 0.9782042083052804, Unit("S/m")
        material_settings.ElectricProps.RelativePermittivity = 54.81107626413944
    simulation.Add(material_settings, components)

    # Adding a new PlaneWaveSourceSettings
    plane_wave_source_settings = emfdtd.PlaneWaveSourceSettings()
    components = [entity__wire_block1]
    plane_wave_source_settings.Theta = 90.0, units.Degrees
    plane_wave_source_settings.Phi = 180.0, units.Degrees
    plane_wave_source_settings.Psi = 90.0, units.Degrees
    simulation.Add(plane_wave_source_settings, components)

    # Editing AutomaticGridSettings "Automatic
    automatic_grid_settings = [x for x in simulation.AllSettings if isinstance(x, emfdtd.AutomaticGridSettings) and x.Name == "Automatic"][0]
    components = [entity__tissue_0, entity__tissue_1, entity__tissue_10, entity__tissue_11, entity__tissue_12, entity__tissue_13, entity__tissue_14, entity__tissue_15, entity__tissue_17, entity__tissue_18, entity__tissue_19, entity__tissue_2, entity__tissue_20, entity__tissue_21, entity__tissue_22, entity__tissue_23, entity__tissue_24, entity__tissue_25, entity__tissue_26, entity__tissue_28, entity__tissue_29, entity__tissue_30, entity__tissue_31, entity__tissue_32, entity__tissue_33, entity__tissue_34, entity__tissue_35, entity__tissue_37, entity__tissue_38, entity__tissue_39, entity__tissue_4, entity__tissue_42, entity__tissue_43, entity__tissue_44, entity__tissue_45, entity__tissue_46, entity__tissue_47, entity__tissue_48, entity__tissue_49, entity__tissue_5, entity__tissue_50, entity__tissue_51, entity__tissue_52, entity__tissue_53, entity__tissue_54, entity__tissue_55, entity__tissue_56, entity__tissue_6, entity__tissue_7, entity__tissue_8, entity__tissue_9, entity__wire_block1]
    simulation.Add(automatic_grid_settings, components)

    # Editing AutomaticVoxelerSettings "Automatic Voxeler Settings
    automatic_voxeler_settings = [x for x in simulation.AllSettings if isinstance(x, emfdtd.AutomaticVoxelerSettings) and x.Name == "Automatic Voxeler Settings"][0]
    components = [entity__tissue_0, entity__tissue_1, entity__tissue_10, entity__tissue_11, entity__tissue_12, entity__tissue_13, entity__tissue_14, entity__tissue_15, entity__tissue_17, entity__tissue_18, entity__tissue_19, entity__tissue_2, entity__tissue_20, entity__tissue_21, entity__tissue_22, entity__tissue_23, entity__tissue_24, entity__tissue_25, entity__tissue_26, entity__tissue_28, entity__tissue_29, entity__tissue_30, entity__tissue_31, entity__tissue_32, entity__tissue_33, entity__tissue_34, entity__tissue_35, entity__tissue_37, entity__tissue_38, entity__tissue_39, entity__tissue_4, entity__tissue_42, entity__tissue_43, entity__tissue_44, entity__tissue_45, entity__tissue_46, entity__tissue_47, entity__tissue_48, entity__tissue_49, entity__tissue_5, entity__tissue_50, entity__tissue_51, entity__tissue_52, entity__tissue_53, entity__tissue_54, entity__tissue_55, entity__tissue_56, entity__tissue_6, entity__tissue_7, entity__tissue_8, entity__tissue_9, entity__wire_block1]
    simulation.Add(automatic_voxeler_settings, components)

    # Editing SolverSettings "Solver
    solver_settings = simulation.SolverSettings
    solver_settings.Kernel = solver_settings.Kernel.enum.AXware

    # Update the materials with the new frequency parameters
    simulation.UpdateAllMaterials()

    # Update the grid with the new parameters
    simulation.UpdateGrid()

    # Add the simulation to the UI
    document.AllSimulations.Add( simulation )
except Exception as exc:
    import traceback
    traceback.print_exc()
    # Reset active version to default
    ReleaseVersion.reset()
    raise(exc)

# this is a second test comment to check git commit from macbook 
